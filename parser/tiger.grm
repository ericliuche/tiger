%%
%term
    EOF 
  | ID of string
  | INT of int | STRING of string 
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK 
  | LBRACE | RBRACE | DOT 
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF 
  | BREAK | NIL
  | FUNCTION | VAR | TYPE 

%nonterm  exp | program
        | arithexp | compexp | letexp | funcexp | assignexp | recordexp | arrayexp
        | expseq | nonemptyexpseq
        | vardec | fundec | typedec | decseq
        | ty | tyfield | tyfieldseq | nonemptytyfieldseq
        | arglist | nonemptyarglist
        | recordfield | recordfieldseq | nonemptyrecordfieldseq
        | leftval

%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE 
	DO OF NIL

%prefer THEN ELSE LPAREN

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%nonassoc ID
%nonassoc LBRACK
%nonassoc OF

%right ASSIGN

%nonassoc EQ NEQ GT GE LT LE

%left PLUS MINUS
%left TIMES DIVIDE 


%%

program	: expseq		()

	
exp : arithexp      ()
    | compexp       () 
    | letexp        ()
    | funcexp       ()
    | assignexp     ()
    | recordexp     ()
    | arrayexp      ()
    | leftval       ()
    | LPAREN expseq RPAREN ()
    | INT           ()
    | STRING        ()


(* Sequences of expression *)

nonemptyexpseq : exp                          ()
               | nonemptyexpseq SEMICOLON exp ()

expseq : (* epsilon *)   ()
       | nonemptyexpseq  ()



(* Type-field declarations *)

tyfield : ID COLON ID ()

nonemptytyfieldseq : tyfield                          ()
                   | nonemptytyfieldseq COMMA tyfield ()

tyfieldseq : (* epsilon *)       ()
           | nonemptytyfieldseq  ()



vardec : VAR ID ASSIGN exp           ()
       | VAR ID COLON ID ASSIGN exp  ()

fundec : FUNCTION ID LPAREN tyfieldseq RPAREN EQ exp          ()
       | FUNCTION ID LPAREN tyfieldseq RPAREN COLON ID EQ exp ()

typedec : TYPE ID EQ ty ()

ty : ID                        ()
   | LBRACE tyfieldseq RBRACE  ()
   | ARRAY OF ID               ()


decseq : (* epsilon *)   ()
       | decseq vardec   ()
       | decseq fundec   ()
       | decseq typedec  ()




nonemptyarglist : exp                        ()
                | nonemptyarglist COMMA exp  ()

arglist : (* epsilon *)     ()
        | nonemptyarglist   ()

funcexp : ID LPAREN arglist RPAREN  ()


arithexp : exp PLUS exp     %prec PLUS   ()
         | exp MINUS exp    %prec MINUS  ()
         | exp TIMES exp    %prec TIMES  ()
         | exp DIVIDE exp   %prec DIVIDE () 


compexp : exp EQ exp    %prec EQ     ()
        | exp NEQ exp   %prec NEQ    ()
        | exp GT exp    %prec GT     ()
        | exp GE exp    %prec GE     ()
        | exp LT exp    %prec LT     ()
        | exp LE exp    %prec LE     ()


letexp : LET decseq IN expseq END  ()


leftval : ID                         ()
        | leftval DOT ID             ()
        | leftval LBRACK exp RBRACK  ()
        | ID LBRACK exp RBRACK       ()

assignexp : leftval ASSIGN exp  %prec ASSIGN ()


recordfield : ID EQ exp  ()

recordfieldseq : (* epsilon *)           ()
               | nonemptyrecordfieldseq  ()

nonemptyrecordfieldseq : recordfield                               ()
                       | nonemptyrecordfieldseq COMMA recordfield  ()

recordexp : ID LBRACE recordfieldseq RBRACE  ()

arrayexp: ID LBRACK exp RBRACK OF exp ()